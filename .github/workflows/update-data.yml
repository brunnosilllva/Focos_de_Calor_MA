name: Atualizar Dados de Focos de Calor

on:
  schedule:
    - cron: '*/10 * * * *'  # A cada 10 minutos
  workflow_dispatch:  # Permite execu√ß√£o manual
  push:
    branches: [ main ]

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Instalar depend√™ncias
      run: |
        npm install @turf/turf papaparse

    - name: Configurar Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git config --local pull.rebase false

    - name: Pull mudan√ßas recentes
      run: |
        git pull origin main || true

    - name: Executar fetch de dados
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: |
        node scripts/fetch-data.js || echo "Erro no fetch, continuando..."

    - name: Processar dados espaciais
      run: |
        node scripts/process-spatial-data.js || echo "Erro no processamento, continuando..."

    - name: Verificar mudan√ßas
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Arquivos modificados:"
          git status --porcelain
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "Nenhuma mudan√ßa detectada"
        fi

    - name: Commit e Push mudan√ßas
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git add src/data/processed/ || true
        git add src/data/raw/ || true
        
        # Verificar se h√° algo para commitar
        if [ -n "$(git diff --staged)" ]; then
          git commit -m "üîÑ Atualiza√ß√£o autom√°tica dos dados - $(date '+%Y-%m-%d %H:%M:%S')" || true
          
          # Tentar push com retry
          for i in {1..3}; do
            git pull --rebase origin main || true
            if git push origin main; then
              echo "‚úÖ Push realizado com sucesso na tentativa $i"
              break
            else
              echo "‚ùå Falha no push, tentativa $i/3"
              sleep 5
            fi
          done
        else
          echo "‚ÑπÔ∏è Nenhuma mudan√ßa para commitar"
        fi

    - name: Deploy para GitHub Pages
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: .
        publish_branch: gh-pages
        force_orphan: true
